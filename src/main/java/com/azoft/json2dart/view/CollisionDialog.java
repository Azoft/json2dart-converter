package com.azoft.json2dart.view;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

import javax.swing.*;
import java.awt.*;

public class CollisionDialog {
    private JButton enterButton;
    private JButton autoResolve;
    private JPanel rootView;
    private JTextField rightName;
    private JTextField leftName;
    private RSyntaxTextArea leftNodeBody;
    private RSyntaxTextArea rightNodeBody;

    private String leftNodeBodyValue;
    private String rightNodeBodyValue;

    private String leftNameValue;
    private String rightNameValue;

    private OnEnterListener onEnterListener;
    private OnAutoResolveListener onAutoResolveListener;

    public CollisionDialog(
        String leftNodeBodyValue,
        String rightNodeBodyValue,
        String leftNameValue,
        String rightNameValue
    ) {
        this.leftNodeBodyValue = leftNodeBodyValue;
        this.rightNodeBodyValue = rightNodeBodyValue;

        this.leftNameValue = leftNameValue;
        this.rightNameValue = rightNameValue;

        $$$setupUI$$$();
        enterButton.addActionListener(e -> {
            if (onEnterListener != null) {
                onEnterListener.onEnter(leftName.getText(), rightName.getText());
            }
        });
        autoResolve.addActionListener(e -> {
            if (onAutoResolveListener != null) {
                onAutoResolveListener.onDontSquash();
            }
        });
    }

    public JPanel getRootView() {
        return rootView;
    }

    public void setOnEnterListener(OnEnterListener onEnterListener) {
        this.onEnterListener = onEnterListener;
    }

    public void setOnAutoResolveListener(OnAutoResolveListener onAutoResolveListener) {
        this.onAutoResolveListener = onAutoResolveListener;
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        rootView = new JPanel();
        rootView.setLayout(new GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        rootView.setPreferredSize(new Dimension(640, 480));
        enterButton = new JButton();
        enterButton.setText("Enter");
        rootView.add(enterButton, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        rootView.add(scrollPane1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        scrollPane1.setViewportView(leftNodeBody);
        final JScrollPane scrollPane2 = new JScrollPane();
        rootView.add(scrollPane2, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        scrollPane2.setViewportView(rightNodeBody);
        rootView.add(rightName, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        rootView.add(leftName, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        autoResolve = new JButton();
        autoResolve.setText("Resolve automatically");
        rootView.add(autoResolve, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootView;
    }

    private void createUIComponents() {
        leftNodeBody = Utils.buildRSyntaxTextArea(getClass(), leftNodeBodyValue, false);
        rightNodeBody = Utils.buildRSyntaxTextArea(getClass(), rightNodeBodyValue, false);

        leftName = new JTextField(leftNameValue);
        rightName = new JTextField(rightNameValue);
    }

    public interface OnEnterListener {
        public void onEnter(String nameLeft, String nameRight);
    }

    public interface OnAutoResolveListener {
        public void onDontSquash();
    }
}
